hi first sorry form bad english new user apache solr read documentation check find solution problem need words order sensitivity query example two something two something three something four four something three something two something query two result something two something three something four two like query four something three something two something need result disturb returned query two result four something three something two something two like query something two something three something four need result disturb returned possible yes regards. hi indexed various types documents fields author already able use facet choose values narrow given use case runs something like example list authors matching steel count number documents associated user chooses entries gets document results author present sideways essentially present facets first results choose facet show results facets show match fashion based analysis chain based fuzzy search search term entered know get list author facet values documents steel matches author field problem author multi-valued field returns facet values match steel values author field really ugly approach work time hoping someone better idea read facet parameters searched various places across anything like use facet.prefix. looking facets begin search term looking facets contain search term could show anywhere fuzzy handling may exact matches anyways masochists know approach search something like searching documents author_boost field internal author field search term mark twain proximity distance somewhat arbitrary return hits really kludgy bits hoping enough hits hits would include mark twain however specify fl fields return field never exists getting back empty elements xml highlighting author_boost field tells us value search terms found sort document kind random sort try get many distinct highlighting results possible i.e score sequencing would cluster highlight values post processing build set strings highlighting results removing highlight elements intent becomes set mark twain strings chug facet_field list author_facet preserve entry set strings built highlighting results present result back users along counts facet really ugly usually work help visualize isexcerpts response join conversation may even get ipad nook cid replaced email.addr.es like us facebook cid replaced email.addr.es follow us twitter. reading reply separate thread reminded ping handler might seem like good solution using ping handler would require code knows specific core server knows solrcloud collections collections admin request outlined previously work without code needing knowledge cloud contains solrcloud almost guarantee collection cloud accessible node cloud node functional extremely pedantic check ping handler defined config collection could use handler make sure collection functional well node check access collection named foo specific node start code sent previously replace last two lines code ping handler different name/path able use setpath method ping object change process method thanks. max= don't get error looking code lengthfilter don't see way behave differently max vs. max higher interfaces classes involved use int length means work perfectly numbers thanks. admin ui cloud-wide information like yet would need visit enough nodes find replica shard get info replicas add summary it's faster go query tab shard replica collection run default search look numfound results plans underway collection info admin ui well core info since 0.x source code branch eliminated bugfix releases seen 0.x collection info show admin ui least may later hopefully year would surprised next year rolls around first thanks. knowing number nodes shards replicas enough information even make guesses http//replaced.url even lot information recommendations made would guesses guesses might completely wrong represent lot expense really need exact kind setup need affected great many things it's request rate complexity queries contents index index solr cache settings schema settings number documents number shards amount memory server amount memory java heap even phrase improve performance vague kind performance issue thanks. it's http//replaced.url part plan able pre-configure everything xml right run archiva default port start app unpack edit file. hello wanted try archiva got source svn failure compiling archiva-reports-standard failure failure reported md0 checksum file exist using maven ideas thanks help. personal technical community goals year give visibility it's going let know others specifically devs ml media don't marketing miss days i'm partially responsible couchdb full otp rcouch branch land later today tomorrow sidetracked thing yesterday real couchapp engine around something new use full power otp embedded easily message passing improve view protocol make efficient possible fully embedded couchdb line really needed code experimentations last week gave convinction could use v0 without embed bloated nodejs propose alternative innovate rather embrace world like others think distinct views couchapp engine require distinct features hopefully able push code month use http transport today mixing core db code http api revisit auth handling remove users references core security doc propose callbacks events allows transport top manage authentication ie authz done http level http api i've started experiment http//replaced.url maybe use websockets improve lot way track improve user dev documentation collect experiments around give full panorama couchdb usage things view enough rest make couchdb interresting users technical level concept gain traction don't go necessarily like others ex nodejs using real technical reason marketing best evangelism don't don't pushed new features interesting concepts apache couchdb however improve user experiment could done addressing concerns users couchdb db couchapp users technical level documentation quick notes concerns couchapp trend among users say couchapps useless enough either remove use way replicate app handle logic either browser using external code top proxy behind workers partials responses mostly hack don't really address concern i'm quite annoyed hear people talking like thing written stone cadon't changed think better today couchapp side use power replication html0 propose new framework possibilities embedded external scripts used erlang don't enough need use specific library work like machine learning processing db level using couchdb database bigcouch rcouch give feature part lot improvements around made really wish core couchdb still used single db without cluster need don't use couchdb big dataset.s use small device mobile sorry don't use pouchdb touchdb use core code voila hopefully able help topics apache couchdb least rcouch new addons course others welcome help. thanks explanation raghav workload concern probably fine run tests pr update although may necessary. hi think trim api generally useful consume based retention well use cases probably optimization favor users could implemented top maybe implement first let applications trim point put burden application side bad downstream consumer group future find use cases multiple stream consumer groups need coordinate among broker side help would make things simpler add regarding relation kip kip-0 high level similar i.e trim timestamp vs. trim offsets would worth thinking together kip-0 search messages timestamp essentially translates timestamp offsets kip-0 built top trim offsets interface translating timestamp offsets jun suggested implementation kip-0 discussion thread introduces new trimrequest would look see could used kip-0 well thanks. sounds like don't latest snapshot version maven-scm. ok tracked infra-0. another point i've done another test node cluster created keyspace replication factor inserted data run full repair node make sstable appear disk run multiple times nodes due incremental repair altenate commands files change disk means anti-compaction used wall-clock timing first method takes average seconds second average seconds it's mutation commands
