well could magnitude notation approach depends complex strings based examples would work identify series integers string assumes lengths series insert number integers string integer series sorting would sort string00 string00 string000 use original strings displays. hi relatively special case parent child relationship trying model currently using solr lucene example parent documents represent information e.g bibliographic information parent document contain children child representing physical copy book information e.g think library multiple branches child documents represent books format available given branch think special set information need solr lucene make use facet based need facet counts child facets example harry potter last crusade j.k. rowlings upcoming block novel following information etc etc bit simplified actually fields involved child document five fields used individually easy combination much harder refine result set relatively straightforward approach location format ordinary everyday facet fields certainly get results although ignore facet counts search book without facets applied get back facets like narrow things work though logically hole trying fill example suppose user chooses narrow location branch format dvd still get hit back child record values user looking dvd isbranch library dvd main completely controlling indexing searching side code i.e formulate document content indexed parse results presenting users approach thinking brute force method accomplishing using facets using facet.prefix parameter query could generate facets like narrowing single facet e.g location branch would usual facet search something like would request back facets like parse values returned location-format_facet retrieve follows branch- prefix would facet values format facet presented users book remains value fields pretty straightforward could somewhat simplified two facet fields instead four keeping paired facets using singleton facets retrieving paired fields limiting taking place parsing pairs location format facets limiting element use facet.prefix limiting choose facets look concatenated value however gets complex ramp fields generally requires individual facet fields number underlying fields i.e two fields two facet fields needed solr/lucene index support three fields could facets required fields would required facets getting bit much hmmm little scribbling ok fair bit scribbling actually reduce facet fields cover fields maybe bad interesting actually coded anything yet paper-napkin level exercise thing done perused various archived threads upcoming functionality regarding parent child hierarchical document strategies found anything would help much least directly saw jira lucene-0 nested document query support looks slides overview structurally would indicates query parser support place yet i.e solr query able relate child level queries either within base query clause question finally logical problem seem resolvable approach brute force outlined willing dive solr lucene code would like indication people think would good possible approach get level e.g way providing indexer tuple found combination values something searching facet queries thanks. dumb question time using bit java bit java. hi working upgrading troubles unit test code custom filters wrote tests extend abstractsolrtestcase reading thread test-harness elements present distributables checked branch code built ant generate-maven-artifacts found lucene-test-framework-0-xxx.jar however contain lucene level framework elements none solr solr test framework actually get built embedded solr jars somewhere way build jar contains solr portion test harnesses thanks. hi went apparently normal build install using instructions http//replaced.url get finally trying http//replaced.url get plenty searching looking information couch.ini anything useful mochiweb looked couchdb wiki troubleshooting forth near tell complaint made something somewhere host request header undefined sure know. nice thought trying suggestions inspired jan brad commenting ipv0 hosts /etc/hosts monkeying hostname along way near tell solved problem tests test suite passed sake reference actual build/install complaints debian make ebin directory lib/common_test may manually created something along lines anyhow problem actual location erl_rx_driver.so start playing earnest couch 0.0a000000 well whatever latest version etch let people know coming along. hello already code builds files yeah already document collection change values fields documents indexing possibility think instead modifying documents sending solr could write updateprocessor tha runs direclty solr gets access documents solr already parsed xml even documents someplace else like dih csv file make changes. contains information extracted document-file question part api document file path returns java object gives us way modify inbetween sending object indexing think gave answer api instead go external java xml apis completion task sorry description really making things complicated thanks. indy artefact use jdk0 sadly use invokedynamic default gpars wrt groovy/jdk0 situation sadly currently jdk0 version gpars mess jdk0 version works suspect people days work could fix almost hackathon happen groovy grails. 'it's fair wouldn't ready yet earliest release. hi steve indexed stored among field default properties listed specifiable -s. hi guys guys commit permission help commit thanks much. think increase acceptable yes think i'll try although case like groups documents smallish number planning variety different index sizes aiming sweet spot around docs. seems like able reproduce issue try investigate/fix. unfortunately wouldn't find commits. looked parameter. hmmm maybe need define mean server mean client view message context http//replaced.url sent solr user mailing list archive nabble.com. hi sorry spam testing posts actually seen sent queries past couple weeks single response anyways two would respond would appreciate let know ignored vs unseen thanks join conversation may even get ipad nook cid replaced email.addr.es like us facebook cid replaced email.addr.es follow us twitter. second query clause instead otherwise mixing apples themes_raw oranges themes. ok figured solr really surprised prototype benchmarks used different instance tomcat using production load tests prototype tomcat instance maxthreads value set using default value production tomcat environment maxthreads value running threads getting connection refused exceptions thrown ramped solr hits past certain level thanks considering yonik others waiting see reply made others said listserv great. guarantee best algorithm isuse final static helper methods set characters strings solr treats special meaning query corresponding escaped versions note actual operators show escape characters wherever occur escapes special characters search terms get confused. hmmm maybe understanding getting jonathan say there good way solr run query across multiple solr indexes shards parameter allows searching across multiple cores instance shards across multiple instances certainly implications like relevance consistent across cores shards works pretty well us thanks
