hi someone else might application would like send even though application may send fatal different logger first post makes sense configure logger 'invoicing later configure logger different properties access 'two loggers code logmanger.getlogger invoicing please first version two different loggers app using appender set level logger perhaps define another root logger invoicing configure global settings invoicing loggers every single fun. see example projects copied example remember perhaps find usefull. see internal log0net logging see. hi yes mamanged kick live following problem app-domain definied powershell workingdir powershell-snapin path located path way specify location configfile let know still need see lines code. message local queue service host processes time beeing bit specific service independed application holds references logging application 's dlls words using generic service remote applications customized version every single kind objects log queue strings perhaps xml real bussiness message objects service hold logic getting msgs queue without looking inside forwarding ado far see thing win kind async logging price pay extra level design service app depends additional tech msmq think non-blocking app ok msgs logged possible wrong order long timestamp shows real date simply build depender following decorator pattern new appender holds property referencing real appender ado-appender case every time appender asked logg new message creates new thread starts leave inside new thread recieved msg passed real appender less lines code whole appender every logginrequest aync creating new thread even faster writing msmq plus add additional logic inside decorator wait writing db long x msgs recieved using threadpool store msgs long network unavailable whatever use apps becourse totaly independend rest app would put inside independed course appender reused appenders ado simply adds asynfunctionality every appender choose. know set properties depending appender use declaration follows generic description given docu reading docu know discover possibilies appender provides knowing follow docu setting properties config given example tag tag set top level config declare custom levels extensions provide said found docu maybe tags best thing would xml-schema config reads 'issue tracking config follow strict schema searching complete plain list xml tags config like etc. hallo able reproduce problem config runs without errors system time study log0net sources tell totaly way configure loggers reason repository stores logers hashtable logger used key table impossible store two loggers happens xmlconfig like loops root xml elements every logger element calls getlogger get logger wich create new logger return allready created exists level set/overriden appenderrefs erased recreated logger allways configured like last definition configfile profe simple hard say fileappender crashes using target file processes perhaps log0net able open filehandle runs write closed appender. perhaps simply use threadcontext store additional infos could store additional infos like. hi alex think line wrong use implementation ilog wrapper implementation checks implementation sets locationinfo onto position point _log instance code logging change ilogger log messages like copied code logimpl.cs loggerwrapperimpl.cs damm good peace code fun reading. well first code filters without toughing log0net code simple add fqdn config simple prevent log recieve specified level use buildin filter levelmatchfilter configfile possible know filter log0net defining custom loglevels easy without toughing code see trace example provided sources. hi shouldnt becourse created instance logger stored repository aplication ends use loggername get instance problem use logmanager repositorie's getlogger member create instances wich result multiple instances logger need implement iloggerfactory interface create custom subclassed logger configure hierarchy use factory use logmanager repository create loggers instance created. research checked log0net sources error thrown appenderskelleton base appenders m_closed m_closed set reads code docu programming error append closed appender perhaps really bug log0net appenders post simple possible config reproduces error system try reproduce debug log0net see whats going wrong appender. thx pointing deliver messages appender fatals delivered. hallo perhaps provide hints get complete list log0net studied great docu examples googling found important tag listed docu ok least beside checking source parser anywhere full list available looking something special know possibilities. hi basic log0net things named logger using loggername allways work instance logger configured named logger need repository stores reference configured thought workflow like configure logger use custom logfile bad bad softwaredesign yes would affect threads use logger use two explicit loggers every location messages calculation lets say following locations location0 used logger could new logger inherits level appender message calculation like configured configfile every message goes child loggers logfile location see simple custom logmanager providing new members getmessagelogger getcalculationlogger location parameter return configured logger ilog precise log0net.ilog. problem use every message needs checked matchs filter perhaps set filterlevel inside definition would speed things. see point building sources coding log0net sources simply use log0net projects way add reference release like debug log0net.dll included inside zip thats
