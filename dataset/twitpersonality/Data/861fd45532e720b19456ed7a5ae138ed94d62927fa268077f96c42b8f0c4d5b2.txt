offer couchwiki project named gorsvet.urlyss tiny url-shortener service written flask using dare may become dares. hi geert-jan yup http//replaced.url modifications patch could work thanks info. run similar issue mix webapps non-solr guys use log0j rotating daily appender since supported default jdk logger mismatch log files produced would looked mention wrapping log0j logmanager big deal bit annoyance search reusable implementation find anything looked good since use resin resin support describing approach taking short-term embedded jetty usage shall back situation ryan arguing use apache commons logging have enough fun nutch commenting discussion. might look nutch handles issue nutch stopwords wants keep around generates combo terms like the- index query parser thing query phrase common terms wind searching across much smaller slice comes course expense larger index lot unique terms due combo terms big win example site http//replaced.url index source files without optimization searches could several seconds got 000ms lots breathing room. hi checking seems indexed fields specified sorting purposes query string least seeing date field correct miss info wiki someplace case would handy standardrequesthandler return error invalid request sorting non-indexed field requested thanks. hi regexreplaceprocessorfactory line means use match groups replacement string reasoning behind missing something groups used making hard write simple solution training exercise students need clean incorrectly formatted dates thanks. hi creating combo field searching straight-forward way boost contribution fields used create combined field would read past threads seem anything built solr simple hack copy field multiple times e.g schema field-to-boost effective boost 0x since highlighting display multi-value field seems work ok long course level boosting 0x 0x etc acceptable something continue work future issues approach run yet thanks. got version index appears open luke reports problem grins crafted matching schema tried use index solr solr-trunk either case get exception startup startup logging says trying something destined fail would expected schema/index miss-matches show later right index opened would seen various posts error due corrupt indexes buggy version java obscure lucene none seem apply situation thanks. thing bit previously using apis area solr call corecontainer.getcore increments open count balance call close call naming could better think common expectation calls get something change state maybe. hoping somebody clarify coredescriptor since much documentation far tell create new solrcore saves coredescriptor pass nothing constructor solrcore takes datadir param see coredescriptor isdatadir gets used construction changing coredescriptor isdatadir effect since would go changing datadir core multi- thanks. hi way explicitly add record using solr add fail record already exists value unique field specified schema isuniquekey field course pre-flight query see record unique exists multi-client environment solr multiple users reliable thanks. exact version resin still confirm uncommented lines. requirement add index folder solr data directory generating lucene index mapreduce program later would like merge index solr index without bringing solr actually tried index merger tool tool works solr possibility merge segments solve problem. would good see cms configs send java. hello refactored hdfs directory implementation solr use project surprised see performed i'm using hdfsdirectory local machine using cache significant speed small enough file making lucene index docs fit block inside cache running multinode cluster aws performance pulling back docs cache much better without according log statements cache hit every time difference local several blocks setting cache used default setting specified ideas speed searches change block something put wrapper around cache number documents directory number documents directory thanks. told use request param module escape param default. move strfield since using synonym expansion anything. similar issue sometime back unable make multi-word ngram match work workaround require field replaced space characters underscore indexing searching replace spaces underscore field passing search suspect elegant solution using proper tokenizer filters could figure simple hack works use-case. solr bin/solr see it's still quite 're looking uploading arbitrary xml scripts browser security issue it's possible never api call best. similar issue started showing yesterday suspecting related azure update sure still. hi queried solr retrieve information database integrate web page dont know implement please help actually page search field search button need get results solr page pls help. still could replicate issue branch i.e queries going server numshards=0 distributed among servers creating cpu spikes servers cloud think behavior expected fixed release. i'm currently performing optimise operation ~000gb index million documents process running hours surprising machine ec0 r0.xlarge four cores 00gb ram 00gb allocated jvm load average steady memory usage less whole time iostat reports util gives. hi i'm new solr i've reads works cadon't find clue specific situation case i've database tables need add index related entry table clients could entry table contacts visual example think case simple search must present information customer question setup schema.xml way account two database tables best regards. hi ngrams http//replaced.url. spent fair bit time yesterday making 0.x compatible patch completed work yet it's bit work dependency build system may able get back weeks yet surroundqparserplugin really need make work need get compilation bit fixed things changed 0.x trunk contrib/modules rahul i'd like see done feel free stab i'll tinker time. hi all.for security reasons hide result dataimport command specifically section initargs order hide connection parameters database removed tag datasource moved requesthandler defined dataimport operation allows hide user password database url app everytime invoke /dataimport command=yyy output xml displaying information 00dih-tenant0-jdbc.xmlorg.postgresql.driverjdbc postgresql //localhost/db0udb0pdb0tenant0statusidlethis response format experimental likely change future wonder way remove completely initarrg section output xml way mask information i'm working restricted environment don't information shown xml output thanks help adolfo. perhaps help make sense advantages i've read article http//replaced.url don't understand well i'll try figure missing part thanks helping understand docvalues feature allow sorting faceting without blow heap necessary faster traditional method memory efficient huge indexes main limitation http//replaced.url thanks reply thought docvalues feature may summarized docvalues feature speed sorting docvalues useful sorting faceting example don't need change nothing xml it's thing need set docvalues=true field definition don't use default implementation loaded need add tag solr.schemacodecfactory docvaluesformat=true fieldtype i'm fully understand kind usage example docvalues. yes works many times result expected guide use regex solr. hi would like know designing index approach better large number documents million values document value field less number documents values document value right approach-0 around million documents group queries really perform slow freedom reduce number docs group multiple documents put identifier value field always search multivalue field. feature flag index operation provide create sematics would cool setting create-semantics flag index operation fail document simular whatever use uniquekey already exist flag set index semantics today except call optype possible values create index index default alternatives solr cloud provide well need current project might make outside solr/lucene hope able convince productowner make solr-feature contributing back especiallly solr community agrees would nice commonly usable feature believe commonly usable feature especially using solr nosql data store search index yes know might consider datarecord inserted solr indexed hard-commit happened many threads working indexing datarecords solr deleting/acknowledging source datarecords next hard-commit happend index believe another issue plans dealing thanks everybody. hello normal many instances solrindexsearchers open time heap analysis shows case autocommit every minutes opensearcher=true would close old searcher create new create new old still getting dereferenced older searchers get cleaned thanks help. jan issue hitting docker /proc/version getting underlying kernel would expect docker container errors update-rc.d service docker using trimmed. hello looking example solr distribution given expected behaviour somebody adds documents without committing without extra commits ever see even committed disk something going reopen searcher eventually soft commit enabled would reopen searcher schedule even hard commit example regards linkedin http//replaced.url time quality nature keeps events happening lately don't seem working anonymous via gtd book. probably need configure tfidfsimilarity schema rebuild index otherwise norm seems unuseful. removed tokens position wiki explains gabrielle would expect two tokens query two tokens would it'set. thing use csshx http//replaced.url mac dealing various boxes cluster issue commands terminal duplicated windows useful global stop/starts updates. i've mentioned i'm new solr i'm java guy rather large schema fields plus large number i've trying improve performance finally got around implementing fastvectorhighlighting gave us immediate improvement qtime nearly improved overall response time bring back extraordinarly large amount data xml results records back payload 0mb even 00mb lot report text used searching solr test allowed us leave report text return decreased payload significantly nearly large i'd expect performance boost however seeing greatly increased response times builds solr even though qtime put perspective original solr core believe test boxes running running older version wildcard field list returns payload approximately 00mb average seconds new version machines older version network traffic/latency/hardware/etc it's returning say reloaded core briefly saw 0.0mb payload back milliseconds within minutes back seconds noticed cpu pegged seconds running queries new build wildcard field list lower scale box running version success getting ms response time reduced payload probably minutes thing bumped seconds response time anyone experience random yet consistent performance degradation insight might causing issues fix i'd love performance boost fast vector highlighting decreased payload thanks advance. i've passed score parameter rejected requests pretty ready give documentation around function queries params working though i've using solr ten years figured lot systems impenetrable. expect happening solr caches effectively making two tests identical using memory hold vital parts code cases disk warming instance using local disk suspect measured first queries assuming auto-warming i'd see running tests curiosity running /dev/shm something 're considering production best. thanks confirming worked using lt instead would help note wiki found confusing dataquery examples used. don't issue optimize command either solrj client issues client.optimize command pressed optimize admin ui solr don't best. querying test solr field it's finding occurences seems substring word like supertestplan don't found unless use wildcards test write tokenizer someone know way around don't add wildcards messes queries multiple. search swap file distro tons info
