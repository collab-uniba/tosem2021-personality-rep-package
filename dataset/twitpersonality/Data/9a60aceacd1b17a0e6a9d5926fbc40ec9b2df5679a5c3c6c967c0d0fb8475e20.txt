tried compiler much different lib wanted sure lib future. hi tried apply with common sense files many differences would incrementally would better easier apply small changes make mostly introduced help reorganize patches quickly agree improved need check clang-format versions available right new support something like //clang-format comment could check new opts available personally hate clang-format makes short yet believe consistent even perfect automatic tool better chaos regards. unnecessary mostly disrupts git blame mean new parts keep old ugly inconsistent really believe importance constant refactoring maintenance means iterations code naturally changed new coding standards mean naming convention example lines functions untestable fork split split split introduce low level unit tests changes way code looks yet pretty confident move good direction developer never afraid making changes existing code tests ensure nothing gon break tests provide tests needs changed software rot became unmaintainable way tests changed provide future project although like live regards. cmake generate vcxproj files cmakelists.txt sure requires something specific cmakelists part visual projects could removed repo generated example part release keeping repo really makes leats separate build systems maintain compiler cmake could think releasing thrift.exe using visual would remove dependency mingw. i0 byte creates inconsistency. require lua support try adding without-lua. got shall commit soon check impl compact protocol. hi going travis builds submitted couple pull req failed g++ internal compiler error stop pull reqsts merged left still shame marks requests failed anyone able reproduce issue seems happen mostly compilingtransporttest.cpp maybe machine runs memory compilation single file takes 0.0gb machine maybe split smaller compile units. submited patch maybe shall get accepted. would go aliases including short long i0 keep everything consistent best. dense protocol fails tests support messages compact protocol fixed awaiting results merge. seems files yet uploaded apache dist server status beeing released staged change web page wait files available best regards. somebody started need oneway calls half normal call pass-through server oneways really nice feature thrift would nice make work properly thrift already defines oneway additional message use. suspected something break submited pull req see travis say shall look hope explaining comments issue devs. favour keeping things simple possible add new flag current behaviour intuitive simple especially need ask someone add new assignees makes process complicated requires two persons get hold anyone able edit jira users leave assignee usually issue result loose information jira simplification suggested removal close transition hope commiters join discussion shall least try suggest update doc/commitets.md mention anything assignee. yes work vs easiest way use cmake generate vcxproj done automatically pretty sure changes properly reflected make build changes build system like adding new file done directly cmake files vcxproj regenerated still imho easier remembering apply changes build system least twice. may remember working c+0/cpp_v0 gen/lib http//replaced.url yet put hiatus time ago maybe next month shall find time finish. hi randy think could somehow merge cpp0 efforts old branch put little hiatus yet think parts could useful best regards. hey keep old c++ lib least c+0 lib would break iface compatibility avoid confusion point agreed use cpp_v0 new lib user would ask c+0 perfect solution still least solution current c++ lib renamed cpp_v0 gen cpp alias cpp_v0 branch probably little bit outdated not merged rebased contains full copy cpp_v0 lib std :shared_ptr std :thread instead boost counterparts boost usage reduced optional fields using boost :optional need check maybe compilers already support c+0 std :optional could switch c+0 probably released cpp_v0 become simplified threadmanager tested think last thing missing best regards. somebody check missed lang. shall debug shifts masks etc hopefully programming message everything ok. hoped could find anything thrift something apache wide seems projects searching apache standards saw like mention design etc coding put bracket importantly put new feature less text code devs used read code specifications ever saw specs thrift langs design part standards could extracted general shared top level docs rules like keep functions short apply almost langs issues lib public api comments lies. think easier store info jira reference jira issue commit additional info could jira especially simplifies providing info user list etc searching even change commit message personally like client part would prefer component still decide jira integrates workflow change information jira and/or commit message could leave original authors commits could make contributors happy authored commit apache repo. looks like :methodname compiler code look like :method_name definitely prefer first currently playing around compiler use lib assuming recent compiler code move toward look. assuming aliases would present parsing time prefer ix notation like explicit yet imagine lot users bits bytes int make idl look like java/c would try detect typedef i00 int constructs next step would detect keywords supported languages might good idea would require lot work especially adding new lang maybe reserved members names doable stig errors think problem appears generated code langs typedef constructs like c++ idl leads something like typedef int00_t int tries redefine. shall try merge/rebase master include recent changes c++ lib c++ v0 lib probably weekend hope shall find time c+0 quick answer point thrift would introduce std00 std00 etc long answer started branch discussion lead following thrift c++ library best modern c++ updated along new compilers new language library features etc library named cpp v0 mix current new versions c++ standard thrift able make library compatible current newest standard std00 std00 point library become library kept common subset c++ compilers features library enable thrift older outdated environments keeping multiple libs cpp00 cpp00 cpp00 etc would add big maintenance cost thrift best regards. sounds great although prefer scons-type tools everything flexible/portable autotools good assume cmake replace automake completely support two building systems like compiler right huge best. fixed hopefully generators shall peek/statsprocessor etc commits go branch. oh really hope langs standards like please http//replaced.url added tasks consistency especially going roger issuggestion lib/ lang/readme.md would nice consistent lib layout avoid mails dev like saw lang x guidelines keep standard ones regards. hi please check current master think problem reported solved http//replaced.url best. soo see two potential changes result discussion add dictionary reserved keywords validate variable names a. global dictionary containing merge keywords thrift supported langs make idl portable like level might little easier maintain yet might surprising users changing gen x lead thrift errors 0a 0b would expect error /warning like int used c++ java. updated generators langs unfortunately fill new seems oneway message never fully supported. today links working idea shall forward dev somebody higher permissions might needed. good idea ignore gcc failure. change way things encoded fixed decoding procedure protocol version change needed imho still old server old decoding procedures may support oneway methods sent new clients compact protocol
